{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n\n'use strict';\n\n/*\n * @returns {bool} true if different, false if equal\n */\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar deepDiffer = function deepDiffer(one, two, maxDepth) {\n  if (maxDepth === void 0) {\n    maxDepth = -1;\n  }\n  if (maxDepth === 0) {\n    return true;\n  }\n  if (one === two) {\n    // Short circuit on identical object references instead of traversing them.\n    return false;\n  }\n  if (typeof one === 'function' && typeof two === 'function') {\n    // We consider all functions equal\n    return false;\n  }\n  if (_typeof(one) !== 'object' || one === null) {\n    // Primitives can be directly compared\n    return one !== two;\n  }\n  if (_typeof(two) !== 'object' || two === null) {\n    // We know they are different because the previous case would have triggered\n    // otherwise.\n    return true;\n  }\n  if (one.constructor !== two.constructor) {\n    return true;\n  }\n  if (Array.isArray(one)) {\n    // We know two is also an array because the constructors are equal\n    var len = one.length;\n    if (two.length !== len) {\n      return true;\n    }\n    for (var ii = 0; ii < len; ii++) {\n      if (deepDiffer(one[ii], two[ii], maxDepth - 1)) {\n        return true;\n      }\n    }\n  } else {\n    for (var key in one) {\n      if (deepDiffer(one[key], two[key], maxDepth - 1)) {\n        return true;\n      }\n    }\n    for (var twoKey in two) {\n      // The only case we haven't checked yet is keys that are in two but aren't\n      // in one, which means they are different.\n      if (one[twoKey] === undefined && two[twoKey] !== undefined) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\nexport default deepDiffer;","map":{"version":3,"names":["_typeof","o","Symbol","iterator","constructor","prototype","deepDiffer","one","two","maxDepth","Array","isArray","len","length","ii","key","twoKey","undefined"],"sources":["/home/abhilasha/Desktop/Projects/Instagram-clone/node_modules/react-native-web/dist/vendor/react-native/deepDiffer/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n\n'use strict';\n\n/*\n * @returns {bool} true if different, false if equal\n */\nvar deepDiffer = function deepDiffer(one, two, maxDepth) {\n  if (maxDepth === void 0) {\n    maxDepth = -1;\n  }\n  if (maxDepth === 0) {\n    return true;\n  }\n  if (one === two) {\n    // Short circuit on identical object references instead of traversing them.\n    return false;\n  }\n  if (typeof one === 'function' && typeof two === 'function') {\n    // We consider all functions equal\n    return false;\n  }\n  if (typeof one !== 'object' || one === null) {\n    // Primitives can be directly compared\n    return one !== two;\n  }\n  if (typeof two !== 'object' || two === null) {\n    // We know they are different because the previous case would have triggered\n    // otherwise.\n    return true;\n  }\n  if (one.constructor !== two.constructor) {\n    return true;\n  }\n  if (Array.isArray(one)) {\n    // We know two is also an array because the constructors are equal\n    var len = one.length;\n    if (two.length !== len) {\n      return true;\n    }\n    for (var ii = 0; ii < len; ii++) {\n      if (deepDiffer(one[ii], two[ii], maxDepth - 1)) {\n        return true;\n      }\n    }\n  } else {\n    for (var key in one) {\n      if (deepDiffer(one[key], two[key], maxDepth - 1)) {\n        return true;\n      }\n    }\n    for (var twoKey in two) {\n      // The only case we haven't checked yet is keys that are in two but aren't\n      // in one, which means they are different.\n      if (one[twoKey] === undefined && two[twoKey] !== undefined) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\nexport default deepDiffer;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AAFA,SAAAA,QAAAC,CAAA,sCAAAD,OAAA,wBAAAE,MAAA,uBAAAA,MAAA,CAAAC,QAAA,aAAAF,CAAA,kBAAAA,CAAA,gBAAAA,CAAA,WAAAA,CAAA,yBAAAC,MAAA,IAAAD,CAAA,CAAAG,WAAA,KAAAF,MAAA,IAAAD,CAAA,KAAAC,MAAA,CAAAG,SAAA,qBAAAJ,CAAA,KAAAD,OAAA,CAAAC,CAAA;AAGA,IAAIK,UAAU,GAAG,SAASA,UAAUA,CAACC,GAAG,EAAEC,GAAG,EAAEC,QAAQ,EAAE;EACvD,IAAIA,QAAQ,KAAK,KAAK,CAAC,EAAE;IACvBA,QAAQ,GAAG,CAAC,CAAC;EACf;EACA,IAAIA,QAAQ,KAAK,CAAC,EAAE;IAClB,OAAO,IAAI;EACb;EACA,IAAIF,GAAG,KAAKC,GAAG,EAAE;IACf;IACA,OAAO,KAAK;EACd;EACA,IAAI,OAAOD,GAAG,KAAK,UAAU,IAAI,OAAOC,GAAG,KAAK,UAAU,EAAE;IAC1D;IACA,OAAO,KAAK;EACd;EACA,IAAIR,OAAA,CAAOO,GAAG,MAAK,QAAQ,IAAIA,GAAG,KAAK,IAAI,EAAE;IAC3C;IACA,OAAOA,GAAG,KAAKC,GAAG;EACpB;EACA,IAAIR,OAAA,CAAOQ,GAAG,MAAK,QAAQ,IAAIA,GAAG,KAAK,IAAI,EAAE;IAC3C;IACA;IACA,OAAO,IAAI;EACb;EACA,IAAID,GAAG,CAACH,WAAW,KAAKI,GAAG,CAACJ,WAAW,EAAE;IACvC,OAAO,IAAI;EACb;EACA,IAAIM,KAAK,CAACC,OAAO,CAACJ,GAAG,CAAC,EAAE;IACtB;IACA,IAAIK,GAAG,GAAGL,GAAG,CAACM,MAAM;IACpB,IAAIL,GAAG,CAACK,MAAM,KAAKD,GAAG,EAAE;MACtB,OAAO,IAAI;IACb;IACA,KAAK,IAAIE,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGF,GAAG,EAAEE,EAAE,EAAE,EAAE;MAC/B,IAAIR,UAAU,CAACC,GAAG,CAACO,EAAE,CAAC,EAAEN,GAAG,CAACM,EAAE,CAAC,EAAEL,QAAQ,GAAG,CAAC,CAAC,EAAE;QAC9C,OAAO,IAAI;MACb;IACF;EACF,CAAC,MAAM;IACL,KAAK,IAAIM,GAAG,IAAIR,GAAG,EAAE;MACnB,IAAID,UAAU,CAACC,GAAG,CAACQ,GAAG,CAAC,EAAEP,GAAG,CAACO,GAAG,CAAC,EAAEN,QAAQ,GAAG,CAAC,CAAC,EAAE;QAChD,OAAO,IAAI;MACb;IACF;IACA,KAAK,IAAIO,MAAM,IAAIR,GAAG,EAAE;MACtB;MACA;MACA,IAAID,GAAG,CAACS,MAAM,CAAC,KAAKC,SAAS,IAAIT,GAAG,CAACQ,MAAM,CAAC,KAAKC,SAAS,EAAE;QAC1D,OAAO,IAAI;MACb;IACF;EACF;EACA,OAAO,KAAK;AACd,CAAC;AACD,eAAeX,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}