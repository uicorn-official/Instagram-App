{"ast":null,"code":"import NativeModulesProxy from './NativeModulesProxy';\n/**\n * Imports the native module registered with given name. In the first place it tries to load\n * the module installed through the JSI host object and then falls back to the bridge proxy module.\n * Notice that the modules loaded from the proxy may not support some features like synchronous functions.\n *\n * @param moduleName Name of the requested native module.\n * @returns Object representing the native module.\n * @throws Error when there is no native module with given name.\n */\nexport function requireNativeModule(moduleName) {\n  var _ref, _globalThis$expo$modu, _globalThis$expo, _globalThis$ExpoModul;\n  var nativeModule = (_ref = (_globalThis$expo$modu = (_globalThis$expo = globalThis.expo) === null || _globalThis$expo === void 0 || (_globalThis$expo = _globalThis$expo.modules) === null || _globalThis$expo === void 0 ? void 0 : _globalThis$expo[moduleName]) !== null && _globalThis$expo$modu !== void 0 ? _globalThis$expo$modu : (_globalThis$ExpoModul = globalThis.ExpoModules) === null || _globalThis$ExpoModul === void 0 ? void 0 : _globalThis$ExpoModul[moduleName]) !== null && _ref !== void 0 ? _ref : NativeModulesProxy[moduleName];\n  if (!nativeModule) {\n    throw new Error(\"Cannot find native module '\".concat(moduleName, \"'\"));\n  }\n  return nativeModule;\n}","map":{"version":3,"names":["NativeModulesProxy","requireNativeModule","moduleName","_ref","_globalThis$expo$modu","_globalThis$expo","_globalThis$ExpoModul","nativeModule","globalThis","expo","modules","ExpoModules","Error","concat"],"sources":["/home/abhilasha/Desktop/Projects/Instagram-clone/node_modules/expo-modules-core/src/requireNativeModule.ts"],"sourcesContent":["import NativeModulesProxy from './NativeModulesProxy';\n\ntype ExpoObject = {\n  modules:\n    | undefined\n    | {\n        [key: string]: any;\n      };\n};\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var expo: ExpoObject | undefined;\n\n  /**\n   * @deprecated `global.ExpoModules` is deprecated, use `global.expo.modules` instead.\n   */\n  // eslint-disable-next-line no-var\n  var ExpoModules:\n    | undefined\n    | {\n        [key: string]: any;\n      };\n}\n\n/**\n * Imports the native module registered with given name. In the first place it tries to load\n * the module installed through the JSI host object and then falls back to the bridge proxy module.\n * Notice that the modules loaded from the proxy may not support some features like synchronous functions.\n *\n * @param moduleName Name of the requested native module.\n * @returns Object representing the native module.\n * @throws Error when there is no native module with given name.\n */\nexport function requireNativeModule<ModuleType = any>(moduleName: string): ModuleType {\n  const nativeModule: ModuleType =\n    globalThis.expo?.modules?.[moduleName] ??\n    globalThis.ExpoModules?.[moduleName] ??\n    NativeModulesProxy[moduleName];\n\n  if (!nativeModule) {\n    throw new Error(`Cannot find native module '${moduleName}'`);\n  }\n  return nativeModule;\n}\n"],"mappings":"AAAA,OAAOA,kBAAkB,MAAM,sBAAsB;AAyBrD;;;;;;;;;AASA,OAAM,SAAUC,mBAAmBA,CAAmBC,UAAkB;EAAA,IAAAC,IAAA,EAAAC,qBAAA,EAAAC,gBAAA,EAAAC,qBAAA;EACtE,IAAMC,YAAY,IAAAJ,IAAA,IAAAC,qBAAA,IAAAC,gBAAA,GAChBG,UAAU,CAACC,IAAI,cAAAJ,gBAAA,gBAAAA,gBAAA,GAAfA,gBAAA,CAAiBK,OAAO,cAAAL,gBAAA,uBAAxBA,gBAAA,CAA2BH,UAAU,CAAC,cAAAE,qBAAA,cAAAA,qBAAA,IAAAE,qBAAA,GACtCE,UAAU,CAACG,WAAW,cAAAL,qBAAA,uBAAtBA,qBAAA,CAAyBJ,UAAU,CAAC,cAAAC,IAAA,cAAAA,IAAA,GACpCH,kBAAkB,CAACE,UAAU,CAAC;EAEhC,IAAI,CAACK,YAAY,EAAE;IACjB,MAAM,IAAIK,KAAK,+BAAAC,MAAA,CAA+BX,UAAU,MAAG,CAAC;;EAE9D,OAAOK,YAAY;AACrB"},"metadata":{},"sourceType":"module","externalDependencies":[]}