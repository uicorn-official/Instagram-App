{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport tw from \"twrnc\";\nimport messages from \"../../constants/messages\";\nimport storyring from \"../../images/global/Storyring.png\";\nimport IconF from \"@expo/vector-icons/Feather\";\nimport bluetick from \"../../icons/bluetick.png\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function AllMessages(_ref) {\n  var navigation = _ref.navigation;\n  return _jsx(View, {\n    style: tw`p-[13px] flex-1`,\n    children: _jsx(FlatList, {\n      data: messages,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item,\n          index = _ref2.index;\n        return _jsx(_Fragment, {\n          children: _jsx(TouchableOpacity, {\n            style: tw`flex-row items-center justify-between mb-[20px]`,\n            onPress: function onPress() {\n              return navigation.navigate(\"DMs\", {\n                item: `${item}`\n              });\n            },\n            children: _jsxs(View, {\n              style: tw`flex-row items-center justify-between w-full`,\n              children: [_jsxs(View, {\n                style: tw`flex-row`,\n                children: [_jsxs(View, {\n                  style: tw`mr-[15px] w-[60px] flex items-center`,\n                  children: [item.isStoryActive && _jsx(Image, {\n                    style: tw`w-[60px] h-[60px]`,\n                    source: storyring\n                  }), _jsx(Image, {\n                    style: tw`w-[52px] h-[52px] rounded-full ${item.isStoryActive ? \"absolute top-[4px] left-[4px]\" : \"\"} `,\n                    source: item.image\n                  })]\n                }), _jsxs(View, {\n                  style: tw`justify-center`,\n                  children: [_jsxs(View, {\n                    style: tw`flex-row mb-[2px]`,\n                    children: [_jsx(Text, {\n                      style: tw`${item.msgsCount ? \"text-black\" : \"text-[#6E6E6E]\"} font-bold text-[12px] mr-[4px]`,\n                      children: item.name\n                    }), item.isVerified && _jsx(Image, {\n                      style: tw`w-[13px] h-[13px] `,\n                      source: bluetick\n                    })]\n                  }), item.msgsCount > 0 && _jsxs(View, {\n                    style: tw`flex-row`,\n                    children: [_jsxs(Text, {\n                      style: tw`font-bold text-[12px] mr-[4px]`,\n                      children: [item.msgsCount, \" new messages\"]\n                    }), _jsx(Text, {\n                      style: tw`text-[12px] mr-[4px]`,\n                      children: \".\"\n                    }), _jsx(Text, {\n                      style: tw`text-[12px]`,\n                      children: item.sentWhen\n                    })]\n                  }), item.msgsCount === 0 && _jsxs(Text, {\n                    style: tw`text-[12px] text-[#6E6E6E]`,\n                    children: [\"Seen \", item.seenWhen]\n                  })]\n                })]\n              }), _jsx(IconF, {\n                name: \"camera\",\n                size: 24,\n                style: tw`${item.msgsCount ? \"text-black\" : \"text-[#6E6E6E]\"}`\n              })]\n            })\n          })\n        });\n      }\n    })\n  });\n}","map":{"version":3,"names":["React","View","Text","FlatList","Image","TouchableOpacity","tw","messages","storyring","IconF","bluetick","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AllMessages","_ref","navigation","style","children","data","keyExtractor","item","id","renderItem","_ref2","index","onPress","navigate","isStoryActive","source","image","msgsCount","name","isVerified","sentWhen","seenWhen","size"],"sources":["/home/abhilasha/Desktop/Projects/Instagram-clone/app/src/components/Messages/AllMessages.js"],"sourcesContent":["import React from \"react\";\nimport { View, Text, FlatList, Image,TouchableOpacity } from \"react-native\";\nimport tw from \"twrnc\";\nimport messages from \"../../constants/messages\";\nimport storyring from \"../../images/global/Storyring.png\";\nimport IconF from \"react-native-vector-icons/Feather\";\nimport bluetick from \"../../icons/bluetick.png\";\n\nexport default function AllMessages({navigation}) {\n  return (\n    <View style={tw`p-[13px] flex-1`}>\n      <FlatList\n        data={messages}\n        keyExtractor={(item) => item.id}\n        renderItem={({ item, index }) => (\n          <>\n            <TouchableOpacity style={tw`flex-row items-center justify-between mb-[20px]`} onPress={()=>navigation.navigate(\"DMs\",{item:`${item}`})}>\n\n              <View style={tw`flex-row items-center justify-between w-full`}>\n                <View style={tw`flex-row`}>\n                  <View style={tw`mr-[15px] w-[60px] flex items-center`}>\n                    {item.isStoryActive && (\n                      <Image style={tw`w-[60px] h-[60px]`} source={storyring} />\n                    )}\n\n                    <Image\n                      style={tw`w-[52px] h-[52px] rounded-full ${\n                        item.isStoryActive\n                          ? \"absolute top-[4px] left-[4px]\"\n                          : \"\"\n                      } `}\n                      source={item.image}\n                    />\n                  </View>\n                  <View style={tw`justify-center`}>\n                    <View style={tw`flex-row mb-[2px]`}>\n                      <Text style={tw`${item.msgsCount?\"text-black\":\"text-[#6E6E6E]\"} font-bold text-[12px] mr-[4px]`}>\n                        {item.name}\n                      </Text>\n                      {item.isVerified && (\n                        <Image\n                          style={tw`w-[13px] h-[13px] `}\n                          source={bluetick}\n                        />\n                      )}\n                    </View>\n                    {item.msgsCount > 0 && (\n                      <View style={tw`flex-row`}>\n                        <Text style={tw`font-bold text-[12px] mr-[4px]`}>\n                          {item.msgsCount}\n                          {\" new messages\"}\n                        </Text>\n                        <Text style={tw`text-[12px] mr-[4px]`}>.</Text>\n                        <Text style={tw`text-[12px]`}>{item.sentWhen}</Text>\n                      </View>\n                    )}\n                    {item.msgsCount === 0 && (\n                      <Text style={tw`text-[12px] text-[#6E6E6E]`}>\n                        {\"Seen \"}\n                        {item.seenWhen}\n                      </Text>\n                    )}\n                  </View>\n                </View>\n\n                <IconF\n                  name=\"camera\"\n                  size={24}\n                  style={tw`${item.msgsCount?\"text-black\":\"text-[#6E6E6E]\"}`}\n                />\n              </View>\n            </TouchableOpacity>\n          </>\n        )}\n      />\n    </View>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}